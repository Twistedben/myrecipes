<%= render 'shared/page_title', title: @recipe.name %>
<!--  Here we render the partial, "shared/page_title" because it's in a separate folder. Then,
after the location, we define what the "title" variable means that we set in our partial, and 
in the Show page's case, it is the display of the Recipe's name, so @recipe.name-->
<div class="well col-md-8 col-md-offset-2">
  <h4 class="center description"><strong>Steps: </strong></h4>
  <hr />
  <%= @recipe.description %> <!-- Displays description as multi-line format--> 
  <hr />
<!--  Below displays if there are any ingredients associated with the recipe -->
  <% if @recipe.ingredients.any? %>
    <p><b>Ingredients: </b><%= render @recipe.ingredients %></p>
  <% end %>
  <div class="pull-right">
    <p class="center">
      <em>Created by:</em>
    </p>
    <p class="center">
      <%= link_to gravatar_for(@recipe.chef), chef_path(@recipe.chef) %>
    </p>
    <p class="center">
      <small><%= @recipe.chef.chefname.capitalize %></small>
      <div class="pull-right"><%= time_ago_in_words(@recipe.created_at) %> ago</div>
    </p>
  </div>
  <div class="recipe-actions">
<!--  Below will determine whether to show "Edit & Delete" if the person is logged in AND if that logged in user is the 
chef associated with that recipe. Or if the user is admin. -->
    <% if logged_in? && (current_chef == @recipe.chef || current_chef.admin?) %>
    <%= link_to 'Edit this Recipe', edit_recipe_path(@recipe), class: "btn btn-xs btn-warning" %>
    <%= link_to "Delete this Recipe", recipe_path(@recipe), method: :delete, 
                                      data: { confirm: 'Are you sure you want to delete this recipe?' }, 
                                      class: "btn btn-xs btn-danger" %>
    <% end %>
  </div>
</div>
<div class="col-md-4 col-md-offset-4 colormatch center">
   <%= link_to "Return to Recipe's Listing", recipes_path, class: "btn btn-success btn-primary" %> 
</div>

<!--  Below is the form for adding NEW comments to the Recipe show page -->
<% if logged_in? %>
  <div class="row">
    <div class="col-md-8 col-md-offset-2">
      <h3>Comments: </h3>
      <hr />
<!-- Below, we need to provide both recipe variable and @comment instance variable for form_for helper, because of
the nested route in "routes.rb" and the @comment instance variable needs to be defined in recipes_controller.rb. 
Below, adding "remote: true" allows the form to be submitted via AJAX-->
     <%= form_for([@recipe, @comment], remote: true, :html => {class: "form-horizontal", role: "form"}) do |f| %>
      <div class="form-group">
        <div class="control-label col-md-2">
          <%= f.label :description, "Comment" %>
        </div>
        <div class="col-md-8">
          <%= f.text_area :description, rows: 8, class: "form-control", placeholder: "Enter Comment Here" %>
        </div>
      </div>  
        <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
            <%= f.submit "Submit Comment", class: "btn btn-primary btn-lg btn-xlarge" %> <!-- class "btn-xlarge makes it green -->
          </div>
        </div>
      <% end %>
        <hr />
      </div>
    </div>
<% end %>

<!-- Below displays comments on Recipe page if there are any assigned to the @recipe -->
<% if @recipe.comments != 0 %>
  <div class="row">
    <div class="col-md-8 col-md-offset-2">
      <h3>Prior Comments: </h3>
<!--  Below, we use this id "messages" to set up a JS event listener, anytime something happens here,
JS will then react and execute code. This occurs in "/assests/javascripts/channels/comments.coffee" under "received -->
      <div id="messages"> 
<!--  Below, we use a different method of rendering a partial. After "partial:" we put the folder path and then
partial name in single ''s and then we have to specify an object as the instance variable, which is @comments. We 
have to grab this instance variable from the recipes_controller.rb for it to render properly. Since this is the Show
page, we have to specify this instance variable inside the controller's "show" action. -->
        <%= render partial: 'comments/comments', object: @comments %>
      </div>
    </div>
  </div>
<% else %>
  <div class="row">
    <div class="col-md-8 col-md-offset-2">
      <h3>No Comments!</h3>
    </div>
  </div>
<% end %>


